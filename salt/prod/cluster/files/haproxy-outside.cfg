#
# This is a sample configuration. It illustrates how to separate static objects
# traffic from dynamic traffic, and how to dynamically regulate the server load.
#
# It listens on 192.168.1.10:80, and directs all requests for Host 'img' or
# URIs starting with /img or /css to a dedicated group of servers. URIs
# starting with /admin/stats deliver the stats page.
#

global
        maxconn         10000
        stats socket    /var/run/haproxy.stat mode 600 level admin
        log             127.0.0.1 local0
        uid             200
        gid             200
        chroot          /var/empty
        daemon

defaults
	mode	http
	timeout connect 5000ms
	timeout client 50000ms
	timeout server 50000ms

# The public 'www' address in the DMZ
frontend webserver
	bind	192.168.44.10:80
        default_backend web
        #bind            192.168.1.10:443 ssl crt /etc/haproxy/haproxy.pem
	mode	http

listen  base_stats
	bind *:8090
	stats enable
	stats hide-version
	stats uri /haproxy?stats
	stats realm "haproxy statistics"
	stats auth wadeson:redhat

# The static backend backend for 'Host: img', /img and /css.
backend web
        balance         roundrobin
        retries         2
        server          web1 192.168.44.134:8080 check inter 1000
        server          web2 192.168.44.135:8080 check inter 1000

